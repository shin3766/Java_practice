package me.yoosup.JavaJungSuk.lambda.md0528;

/**
 * 스트림의 특징 하이라이트
 * 1. 스트림은 데이터 소스를 변경하지 않는다.
 * 2. 스트림은 일회용이다.
 * 3. 스트림은 작업을 내부반복으로 처리한다.
 * 4. 지연된 연산
 * 5. Stream<Integer>과 IntStream
 * 6. 병렬 스트림 (sequential(디폴트), parallel)
 *
 */

/**
 * 1. 스트림은 원본데이터를 변경하지 않는다. 결과를 변수에 담고 싶다면 결과에 맞는 타입을 선언하면 도니다.
 * 2. 스트림은 일회용으로 다시사용하려면 다싯 선언해야한다.
 * 3. 스트림 작업은 내부반복으로 처리한다. 반복문을 메서드 내부에 숨겼다는 말이다.
 * 4. 스트림 작업은 지연된 연산을 사용하므로 최종 연산이 수행되어야 스트림의 요소들이 중간 연산을 거치게 된닫.
 * 5. Stream<Integer>과 IntStream은 같은 의미지만 생산성을 위해 IntStream을 사용하는게 더 좋다. 이렇게 특정 타입의 스트림은 해당 타입에 맞는
 * 유용한 메서드를 지원한다.
 * 6. 병렬 스트림을 통해 연산을 병렬로 실행할 수 있다. stream위에 parallel()을 붙이면 stream의 속성이 바뀌어 연산을 병렬로 진행하게된다.
 */

public class stream_sec16 {
}
